<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn Shortcuts</title>
    <link>https://kilpkonn.github.io/learn-shortcuts/</link>
    <description>Recent content on Learn Shortcuts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://kilpkonn.github.io/learn-shortcuts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Week 0</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-00/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-00/</guid>
      <description>Starting point #  This is a short chapter to describe starting point.
Before starting you should have:
 basic experience with neovim (I had ~5 months as neovim as my main editor but also less is sufficient for sure) know basic movement, editing and similar in vim. know very basics of lua (for config)  Some random tips #  Make neovim your default editor
# .zshenv export EDITOR=&amp;#34;nvim&amp;#34; Add alias to launch neovim faster</description>
    </item>
    
    <item>
      <title>Week 1</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-01/</guid>
      <description>Replace in range #  Sometimes we wish to replace strings only in some range, not at file at a time. Here are some tims to accomplish that.
Replace in visually seleceted range #   Select range in visual mode Press &amp;lt;:&amp;gt; to start range action, you should see something like this:  :&amp;#39;&amp;lt;,&amp;#39;&amp;gt;Type in replace command as usual eg. for foo -&amp;gt; bar  :&amp;#39;&amp;lt;,&amp;#39;&amp;gt;s/foo/bar/gReplace last visually selected range in normal mode #   Select range in visual mode Exit to normal mode Start command with &amp;lt;:&amp;gt; as usual Use \%V to restrict selection to previously selected visual range.</description>
    </item>
    
    <item>
      <title>Week 2</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-02/</guid>
      <description>The &amp;lsquo;g&amp;rsquo; command #  It is quite common to wish to run some specific command on every line containing a pattern. This is exactly what the &amp;lsquo;g&amp;rsquo; command is for.
Syntax #  The &amp;lsquo;g&amp;rsquo; command is executed in command mode and the syntax is following:
:g/pattern/commandAlso the inverse is possible (run command on lines that do not match)
:g!/pattern/commandor
:v/pattern/commandExamples #  Delete all lines containing pattern #  :g/foo/dDelete all empty lines #  :g/^\s*$/dMove imports to start of file #  :g/import/m0Capitalize all lines not containig bar #  :v/bar/normal gUU</description>
    </item>
    
    <item>
      <title>Week 2</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/nvim/week-03/</guid>
      <description>Working on long lines #  Sometimes lines are so long that they do not fit onto screen. It is inportant to know how to split line to multiple or sometimes merge into single in these cases.
Movement #  This is how to move on wrapped lines as if they were multiple lines
gj - downgk - upg$ - end of a visual lineg0 - beginning of a visual lineSplit to multiple lines #  To split single line (or any other text object) to multiple lines gq followed by a motion can be used.</description>
    </item>
    
  </channel>
</rss>
