<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jaq from zero to hero on Learn Shortcuts</title>
    <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/</link>
    <description>Recent content in Jaq from zero to hero on Learn Shortcuts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://kilpkonn.github.io/learn-shortcuts/docs/jaq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Week 1</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-01/</guid>
      <description> Identity filter # Identity filter is the simplest filter there is as it basically just returns the input. Identity filter is specified as ..
Example # echo &amp;#39;{ &amp;#34;a&amp;#34;: 1, &amp;#34;b&amp;#34;: true }&amp;#39; | jq &amp;#39;.&amp;#39; </description>
    </item>
    
    <item>
      <title>Week 2</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-02/</guid>
      <description> Object identifier index # Object identifier filter is the most basic non-trivial filter there is (well, along array index). The syntax is .foo, &#39;.foo.bar, .&amp;quot;123foo&amp;quot;, .&amp;quot;foo::bar&amp;quot; or .[&amp;quot;foo&amp;quot;]. The filter takes object and returns value at the key specified or null otherwise.
Example # echo &amp;#39;{ &amp;#34;a&amp;#34;: 1, &amp;#34;b&amp;#34;: true }&amp;#39; | jq &amp;#39;.a&amp;#39; # Outout: 1 echo &amp;#39;{ &amp;#34;a&amp;#34;: 1, &amp;#34;b&amp;#34;: true }&amp;#39; | jq &amp;#39;.[&amp;#34;b&amp;#34;]&amp;#39; # Outout: true </description>
    </item>
    
    <item>
      <title>Week 3</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-03/</guid>
      <description>Optional object filters # Optional object index filter is specified with postfix ? (.foo?.bar?) and it works just as regular object index filter except it doesn&amp;rsquo;t output an error if . or .foo is not an object.</description>
    </item>
    
    <item>
      <title>Week 4</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-04/</guid>
      <description>Array filters # Array filter is quite basic as it works as .[i] where i is the index of the object we wish to select. Note that also negative indexes work just as in python.
Slice filters # Slice filters work as .[i:j] where i is the start index and j is the end index of the slice. The filter works on both arrays and strings.
Examples # echo &amp;#39;[1,2,3]&amp;#39; | jq &amp;#39;.</description>
    </item>
    
    <item>
      <title>Week 5</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-05/</guid>
      <description> Array/Object value iterator # Array/object value iterator simply returns whole array/object instead of some of its values. You can also postfix it with ? to avoid yielding error if the root object isn&amp;rsquo;t array nor object.
Examples # echo &amp;#39;[1,2,3]&amp;#39; | jq &amp;#39;.[]&amp;#39; # [1, 2, 3] </description>
    </item>
    
    <item>
      <title>Week 6</title>
      <link>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kilpkonn.github.io/learn-shortcuts/docs/jaq/week-06/</guid>
      <description>Basic filter combinators # Here are some basics on how to combine filters.
Comma filter (,) # If too filters are separated with comma both filters are ran and their outputs are concatenated in the order they are specified.
Pipe filter (|) # If too filters are separated by a pipe operator then the first filter is rand and its output is fed into the second filter.
Examples # echo &amp;#39;{&amp;#34;foo&amp;#34;: 42, &amp;#34;bar&amp;#34;: &amp;#34;something else&amp;#34;, &amp;#34;baz&amp;#34;: true}&amp;#39; | jq &amp;#39;.</description>
    </item>
    
  </channel>
</rss>
